name: Build Workflow

on:
  workflow_dispatch:
  pull_request:
    branches: [main, dev]
    paths:
      - "setup.py"
      - "hardware/**"
      - "include/**"
      - "keyboards/**"
      - "linker/**"
      - "scripts/**"
      - "src/**"
      - ".github/workflows/build.yml"
      - ".github/workflows/ci_define_matrix.py"
  push:
    branches: [main, dev]
    paths:
      - "setup.py"
      - "hardware/**"
      - "include/**"
      - "keyboards/**"
      - "linker/**"
      - "scripts/**"
      - "src/**"
      - ".github/workflows/build.yml"
      - ".github/workflows/ci_define_matrix.py"
    tags: ["v*"]

permissions:
  contents: write

jobs:
  define-matrix:
    name: Define Action Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.define-matrix.outputs.matrix }}
    steps:
      - name: Checkout libhmk
        uses: actions/checkout@v5

      - name: Generate Matrix
        id: define-matrix
        run: |
          MATRIX_JSON=$(python .github/workflows/ci_define_matrix.py)
          echo "matrix=$MATRIX_JSON"
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  build:
    name: Build Firmware
    needs: define-matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout libhmk
        uses: actions/checkout@v5

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Setup PlatformIO Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build ${{ matrix.keyboard }}
        run: |
          python setup.py -k ${{ matrix.keyboard }}
          pio run

      - name: Archive Firmware Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.keyboard }}
          path: |
            .pio/build/${{ matrix.keyboard }}/firmware.bin
            .pio/build/${{ matrix.keyboard }}/firmware.elf

  release:
    name: Create Releast Draft
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Firmware Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: firmware-*

      - name: Zip Firmware Binaries
        run: zip -r firmware.zip firmware-*

      - name: Create Release Draft
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: firmware.zip
